{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/neutronium-vue-command-mixin/index.js"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","__webpack_require__","d","__webpack_exports__","commandMixin","props","command","required","validator","value","arg","default","computed","canExecute","hasOwnProperty","CanExecuteValue","watch","command.CanExecuteCount","computeCanExecute","methods","CanExecute","execute","evt","cancel","$emit","Execute"],"mappings":"+GAMe,SAAAA,EACfC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBAC,EArBAC,EAAA,oBAAAT,EACAA,EAAAS,QACAT,EAiDA,GA9CAC,IACAQ,EAAAR,SACAQ,EAAAP,kBACAO,EAAAC,WAAA,GAIAP,IACAM,EAAAE,YAAA,GAIAN,IACAI,EAAAG,SAAA,UAAAP,GAIAC,GACAE,EAAA,SAAAK,GAEAA,EACAA,GACAC,KAAAC,QAAAD,KAAAC,OAAAC,YACAF,KAAAG,QAAAH,KAAAG,OAAAF,QAAAD,KAAAG,OAAAF,OAAAC,WAEAH,GAAA,qBAAAK,sBACAL,EAAAK,qBAGAd,GACAA,EAAAe,KAAAL,KAAAD,GAGAA,KAAAO,uBACAP,EAAAO,sBAAAC,IAAAf,IAKAG,EAAAa,aAAAd,GACGJ,IACHI,EAAAD,EACA,WAAqBH,EAAAe,KAAAL,UAAAS,MAAAC,SAAAC,aACrBrB,GAGAI,EACA,GAAAC,EAAAE,WAAA,CAGAF,EAAAiB,cAAAlB,EAEA,IAAAmB,EAAAlB,EAAAR,OACAQ,EAAAR,OAAA,SAAA2B,EAAAf,GAEA,OADAL,EAAAW,KAAAN,GACAc,EAAAC,EAAAf,QAEK,CAEL,IAAAgB,EAAApB,EAAAqB,aACArB,EAAAqB,aAAAD,EACA,GAAAE,OAAAF,EAAArB,GACA,CAAAA,GAIA,OACAwB,QAAAhC,EACAS,WA1FAwB,EAAAC,EAAAC,EAAA,sBAAApC,uCCAA,MAAAqC,EAAA,CACAC,MAAA,CACAC,QAAA,CACAC,UAAA,EACAC,UAAA,SAAAC,GACA,wBAAAA,IAGAC,IAAA,CACAH,UAAA,EACAI,QAAA,OAGAC,SAAA,CACAC,WAAA,WACA,cAAA/B,KAAAwB,WAEAxB,KAAAwB,QAAAQ,eAAA,oBAAAhC,KAAAwB,QAAAS,mBAGAC,MAAA,CACAC,0BAAA,WACAnC,KAAAoC,qBAEAR,IAAA,WACA5B,KAAAoC,sBAGAC,QAAA,CACAD,kBAAA,WACA,OAAApC,KAAAwB,SAAAxB,KAAAwB,QAAA,YACAxB,KAAAwB,QAAAc,WAAAtC,KAAA4B,MAEAW,QAAA,WACA,IAAAvC,KAAA+B,WACA,OAEA,MAAAH,EAAA5B,KAAA4B,IACAY,EAAA,CAAgBZ,MAAAa,QAAA,GAChBzC,KAAA0C,MAAA,gBAAAF,GAEAA,EAAAC,SAGAzC,KAAAwB,QAAAmB,QAAAf,GACA5B,KAAA0C,MAAA,eAAAd,OAKeP,EAAA","file":"js/chunk-vendors.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","const commandMixin = {\r\n\tprops: {\r\n\t\tcommand: {\r\n\t\t\trequired: true,\r\n\t\t\tvalidator: function (value) {\r\n\t\t\t\treturn typeof value === 'object'\r\n\t\t\t}\r\n\t\t},\r\n\t\targ: {\r\n\t\t\trequired: false,\r\n\t\t\tdefault: null\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tcanExecute: function () {\r\n\t\t\tif (this.command === null)\r\n\t\t\t\treturn false;\r\n\t\t\treturn !this.command.hasOwnProperty('CanExecuteValue') || this.command.CanExecuteValue;\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\t'command.CanExecuteCount': function () {\r\n\t\t\tthis.computeCanExecute();\r\n\t\t},\r\n\t\targ: function () {\r\n\t\t\tthis.computeCanExecute();\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tcomputeCanExecute: function () {\r\n\t\t\tif ((this.command !== null) && (this.command.CanExecute))\r\n\t\t\t\tthis.command.CanExecute(this.arg);\r\n\t\t},\r\n\t\texecute: function () {\r\n\t\t\tif (!this.canExecute) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tconst arg = this.arg\r\n\t\t\tconst evt = {arg: arg, cancel: false}\r\n\t\t\tthis.$emit('beforeExecute', evt)\r\n\r\n\t\t\tif (evt.cancel) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.command.Execute(arg);\r\n\t\t\tthis.$emit('afterExecute', arg)\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default commandMixin"],"sourceRoot":""}